#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

// Function to get a random response from a vector of responses
string getRandomResponse(const vector<string>& responses) {
    return responses[rand() % responses.size()];
}

// Function to process user input and generate a response
string getResponse(const string& userInput) {
    // Map of keywords to possible responses
    map<string, vector<string>> responses = {
        {"hello", {"Hi there! How can I help you?", "Hello! What’s up?", "Hey! Nice to meet you!"}},
        {"how are you", {"I'm just a bot, but I'm doing great! How about you?", "I'm good! What about you?", "Feeling fantastic today!"}},
        {"bye", {"Goodbye! Have a great day!", "See you soon!", "Take care! Come back anytime!"}},
        {"name", {"I'm ChatBot, your friendly assistant!", "I am a simple chatbot made in C++.", "You can call me ChatBot!"}},
        {"weather", {"I'm not a meteorologist, but I can check online for you!", "Weather depends on your location. Try a weather app!", "It’s always sunny in the world of code!"}},
        {"help", {"I can answer simple questions. Try asking about the weather, greetings, or even my name!", "I'm here to chat with you! Ask me anything!", "Need help? Just ask me anything!"}},
        {"joke", {"Why don’t scientists trust atoms? Because they make up everything!", "I told my computer a joke, but it didn’t laugh... I guess it had no sense of humor!", "Why do programmers prefer dark mode? Because light attracts bugs!"}},
        {"hobby", {"I love chatting with people like you!", "Talking to you is my favorite thing!", "Helping people is what I do best!"}}
    };

    // Search for a keyword match
    for (const auto& pair : responses) {
        if (userInput.find(pair.first) != string::npos) {
            return getRandomResponse(pair.second);
        }
    }

    // Default response if no match is found
    return "I'm not sure how to respond to that. Try asking something else!";
}

int main() {
    srand(time(0));  // Seed for random responses
    string userInput;

    cout << "ChatBot: Hello! Type 'bye' to exit." << endl;

    while (true) {
        cout << "You: ";
        getline(cin, userInput);

        // Convert input to lowercase for better keyword matching
        for (char &c : userInput) {
            c = tolower(c);
        }

        if (userInput == "bye") {
            cout << "ChatBot: " << getResponse(userInput) << endl;
            break;
        }

        cout << "ChatBot: " << getResponse(userInput) << endl;
    }

    return 0;
}
